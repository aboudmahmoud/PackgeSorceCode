/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.aboud.gradleproject1;

import static com.aboud.gradleproject1.RequstesOrder.model;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Aboud Mahmoud
 */
public class ViewOfdata extends javax.swing.JPanel  {

    /**
     * Creates new form ViewOfdata
     */
     //Winreport rep= new Winreport();
    private  String[] headr= { "ID","—ﬁ„ «·  »⁄","«”„ «·⁄„Ì·","Â« › «·⁄„Ì·"," «—ÌŒ «÷«›… «·ÿ—œ","”⁄— «·ÿ—œ"," «—ÌŒ Ê’Ê· «·ÿ—œ", " „·«ÕŸ…"};
        private String[][] dater;
        private  String[] headr2;
         private String[][] dater2;
         private  ArrayList<PackgeValue> arr;
        private  ArrayList<dateValue>   ar;
        static DefaultTableModel model2 = new DefaultTableModel();
       double  cost1=0,cost2=0;
       int res=0;
      
    public ViewOfdata(int r) throws MalformedURLException {
        res=r;
        initComponents();
        if (r==1)
        {
             getThedata();
        }
        else  if (r==2)
        {
            getTheDilverdData();
          
        }
        else if (r==3)
        {
            jLabel1.setVisible(false);
            jComboBox1.setVisible(false);
        }
     imageSater();
     
    }
    void imageSater() throws MalformedURLException
    {
        Image iconr;
        ImageIcon myimage = setIMAgeFor("https://firebasestorage.googleapis.com/v0/b/projectmangment-666fb.appspot.com/o/refresh.png?alt=media&token=d5751ad7-6538-439b-8ee3-f930b71edab5");
        jButton4.setIcon(myimage);
        
        myimage = setIMAgeFor("https://firebasestorage.googleapis.com/v0/b/projectmangment-666fb.appspot.com/o/delete.png?alt=media&token=e6b21083-1907-4a24-ba6e-3726ac809fdc");
        jButton3.setIcon(myimage);
        
        myimage = setIMAgeFor("https://firebasestorage.googleapis.com/v0/b/projectmangment-666fb.appspot.com/o/edit.png?alt=media&token=7cdeedd1-1bd5-45ff-bfea-bd753ae7713a");
        jButton2.setIcon(myimage);
    
        myimage =setIMAgeFor("https://firebasestorage.googleapis.com/v0/b/projectmangment-666fb.appspot.com/o/printer.png?alt=media&token=b06151e4-ccb9-4d82-a58b-f4d305101e3e");
        jButton1.setIcon(myimage);
    }
      private ImageIcon setIMAgeFor(String path) throws MalformedURLException
     {
         URL urt= new URL(path);
         Image iconr = Toolkit.getDefaultToolkit().getImage(urt);
          ImageIcon myimage = new ImageIcon(iconr);
          return myimage;
     }
    void getThedata()
    {
        arr=LiteConection.getPackgeInfo();
        ar=LiteConection.get_The_date();
        dater = new String[arr.size()][8];
        
        for(int i= 0 ; i<arr.size() ; i++)
        {
                     dater[i][1]=arr.get(i).getPackageSerilNumber();
                     dater[i][0]=""+arr.get(i).getPackageID();
                     dater[i][2]=arr.get(i).getOwnerPackageName();
                     dater[i][3]=arr.get(i).getOwnerPhoneNumber();
                     dater[i][4]=ar.get(i).getStardate();
                     dater[i][5]=arr.get(i).getPackgePrice();
                     dater[i][6]=arr.get(i).getPackgeDate();
                     dater[i][7]=arr.get(i).getPackgeNote();
                     
        }
       jTable1=new JTable(dater,headr);
       
             ((DefaultTableCellRenderer)jTable1.getTableHeader().getDefaultRenderer())
             .setHorizontalAlignment((int)JLabel.CENTER_ALIGNMENT);
     DefaultTableCellRenderer v = new DefaultTableCellRenderer();
     v.setHorizontalAlignment(JLabel.CENTER);
     jTable1.getColumnModel().getColumn(0).setCellRenderer(v);
     for( int i=0 ; i<jTable1.getColumnCount();i++)
     {
         jTable1.getColumnModel().getColumn(i).setCellRenderer(v);
     }
      jScrollPane1.setViewportView(jTable1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setBackground(new java.awt.Color(42, 157, 143));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("ÿ»«⁄…");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(42, 157, 143));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText(" ⁄œÌ·");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(231, 111, 81));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Õ–› ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox1.setBackground(new java.awt.Color(42, 157, 143));
        jComboBox1.setForeground(new java.awt.Color(255, 255, 255));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "»Ì  ·Õ„", "—«„ «··Â", "«·Œ·Ì·", "‰«»·”", "Ã‰Ì‰", "ÿÊ·ﬂ—„", "ﬁ·ﬁÌ·Ì…", "«—ÌÕ«" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("«Œ «— «·›—⁄");

        jButton4.setBackground(new java.awt.Color(42, 157, 143));
        jButton4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText(" ÕœÌÀ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 835, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(27, 27, 27)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
  
     MessageFormat h= new MessageFormat("”Ã· «·ÿ—Êœ");
           MessageFormat f =new MessageFormat("page{1}");
           try {
               jTable1.print(JTable.PrintMode.FIT_WIDTH,h,f); 
           }
           catch (Exception ee)
           {
               System.out.println("error man !");
           }
     
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
       ///  jTable1.getValueAt()
      System.out.println(jTable1.getSelectedColumn());
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // TODO add your handling code here:
            // int col= jTable1.getSelectedColumn();
            int col= 0;
            int row=jTable1.getSelectedRow();
            String id=jTable1.getModel().getValueAt(row, col).toString();
            // System.out.println(id);
            int ide=Integer.parseInt(id);
            EditPackge ts = new EditPackge();
            arr=LiteConection.getPackgeInfo();
            ar=LiteConection.get_The_date();
            for (int i= 0 ; i<arr.size(); i++)
            {
                
                if(arr.get(i).getPackageID()==ide)
                {
                    
                    try {
                        ts.getTheData(arr.get(i).getOwnerPackageName(), arr.get(i).getPackageID(), arr.get(i).isPackgeDilverd(),arr.get(i).getPackgeDamperntHolder(), arr.get(i).getPackageSerilNumber(), arr.get(i).getPackgePrice(),arr.get(i).getOwnerPhoneNumber(),arr.get(i).getPackgeDate());
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex.getMessage(),"error",JOptionPane.ERROR_MESSAGE);
                    }
                    /*dater[0][1]=arr.get(i).getPackageSerilNumber();
                    
                    dater[0][0]=""+arr.get(i).getPackageID();
                    dater[0][2]=arr.get(i).getOwnerPackageName();
                    dater[0][3]=arr.get(i).getOwnerPhoneNumber();
                    dater[0][4]=ar.get(i).getStardate();
                    dater[0][5]=arr.get(i).getPackgePrice();
                    dater[0][6]=arr.get(i).getPackgeDate();
                    dater[0][7]=arr.get(i).getPackgeNote();*/
                    ts.setVisible(true);
                    break;
                }
                
                
            }
            // RefResh();
        } catch (MalformedURLException ex) {
          JOptionPane.showMessageDialog(null, ex.getMessage());
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        if(  jTable1.getSelectedRow() > 0 )
                {
                    // «·Œ«’ ›ÌÂ index ﬂ· ”ÿ— ﬁ«„ «·„” Œœ„ » ÕœÌœÂ „‰ «·ÃœÊ· »⁄œÂ« ”Ì „ Õ–› ﬂ· ”ÿ— „‰ Œ·«· —ﬁ„ «·‹ index ”Ì „  Œ“Ì‰ —ﬁ„
                    int[] selectedIndices =  jTable1.getSelectedRows();
                    for( int i=selectedIndices.length-1; i>0; i-- )
                    {
                        model2.removeRow( selectedIndices[i] );
                    }
                }
       int col= 0;
        int row=jTable1.getSelectedRow();
   String id=jTable1.getModel().getValueAt(row, col).toString();
        int ide=Integer.parseInt(id);
        LiteConection.delete_packge(ide);
        try {
            RefResh();
        } catch (MalformedURLException ex) {
           JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
     
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:

         arr=LiteConection.getPackgeInfo();
        ar=LiteConection.get_The_date();
        dater = new String[arr.size()][9];
        int cnter=0;
        for(int i= 0 ; i<arr.size() ; i++)
        {
            if (res==1)
            {
            if (arr.get(i).getPackgeDamperntHolder().equals(jComboBox1.getSelectedItem().toString()))
            {
                dater[cnter][1]=arr.get(i).getPackageSerilNumber();
                     dater[cnter][0]=""+arr.get(i).getPackageID();
                     dater[cnter][2]=arr.get(i).getOwnerPackageName();
                     dater[cnter][3]=arr.get(i).getOwnerPhoneNumber();
                     dater[cnter][4]=ar.get(i).getStardate();
                     dater[cnter][5]=arr.get(i).getPackgePrice();
                     dater[cnter][6]=arr.get(i).getPackgeDate();
                     dater[cnter][7]=arr.get(i).getPackgeNote();
                     cnter++;
            }
           
            }
             else if(res==2)
             {
                  if (arr.get(i).getPackgeDamperntHolder().equals(jComboBox1.getSelectedItem().toString()) &&arr.get(i).isPackgeDilverd()==false )
            {
                dater[cnter][1]=arr.get(i).getPackageSerilNumber();
                     dater[cnter][0]=""+arr.get(i).getPackageID();
                     dater[cnter][2]=arr.get(i).getOwnerPackageName();
                     dater[cnter][3]=arr.get(i).getOwnerPhoneNumber();
                     dater[cnter][4]=ar.get(i).getStardate();
                     dater[cnter][5]=arr.get(i).getPackgePrice();
                     dater[cnter][6]=arr.get(i).getPackgeDate();
                     dater[cnter][7]=arr.get(i).getPackgeNote();
                     cnter++;
            }
             }
                     
        }
       jTable1=new JTable(dater,headr);
       
          //jScrollPane1.setLayout(null);
           
             ((DefaultTableCellRenderer)jTable1.getTableHeader().getDefaultRenderer())
             .setHorizontalAlignment((int)JLabel.CENTER_ALIGNMENT);
     DefaultTableCellRenderer v = new DefaultTableCellRenderer();
     v.setHorizontalAlignment(JLabel.CENTER);
     jTable1.getColumnModel().getColumn(0).setCellRenderer(v);
     for( int i=0 ; i<jTable1.getColumnCount();i++)
     {
         jTable1.getColumnModel().getColumn(i).setCellRenderer(v);
     }
      jScrollPane1.setViewportView(jTable1);

    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            // TODO add your handling code here:
            //this.revalidate();
            //this.repaint();
            //   this.setVisible(false);
            // this.setVisible(true);
            RefResh();
        } catch (MalformedURLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    
    }//GEN-LAST:event_jButton4ActionPerformed
void RefResh() throws MalformedURLException
{
       MangmentPage.jTabbedPane2.remove(this);
     ViewOfdata v= new ViewOfdata(res);
     String mes="";
     if (res==1)
     {
         mes="Ã„Ì⁄ «·ÿ—Êœ";
     }
     else if (res==2)
     {
          mes="«·ÿ—Êœ ﬁÌœ «· Ê’Ì·";
     }
  MangmentPage.jTabbedPane2.add(v,mes);
}
      void getTheDilverdData()
    {
        arr=LiteConection.getPackgeInfo();
        ar=LiteConection.get_The_date();
        dater = new String[arr.size()][9];
        int cnter=0;
        for(int i= 0 ; i<arr.size() ; i++)
        {
            if (arr.get(i).isPackgeDilverd()==false)
            {
                dater[cnter][1]=arr.get(i).getPackageSerilNumber();
                     dater[cnter][0]=""+arr.get(i).getPackageID();
                     dater[cnter][2]=arr.get(i).getOwnerPackageName();
                     dater[cnter][3]=arr.get(i).getOwnerPhoneNumber();
                     dater[cnter][4]=ar.get(i).getStardate();
                     dater[cnter][5]=arr.get(i).getPackgePrice();
                     dater[cnter][6]=arr.get(i).getPackgeDate();
                     dater[cnter][7]=arr.get(i).getPackgeNote();
                     cnter++;
            }
            else{
                     
            }
                     
        }
       jTable1=new JTable(dater,headr);
       
          //jScrollPane1.setLayout(null);
           
             ((DefaultTableCellRenderer)jTable1.getTableHeader().getDefaultRenderer())
             .setHorizontalAlignment((int)JLabel.CENTER_ALIGNMENT);
     DefaultTableCellRenderer v = new DefaultTableCellRenderer();
     v.setHorizontalAlignment(JLabel.CENTER);
     jTable1.getColumnModel().getColumn(0).setCellRenderer(v);
     for( int i=0 ; i<jTable1.getColumnCount();i++)
     {
         jTable1.getColumnModel().getColumn(i).setCellRenderer(v);
     }
      jScrollPane1.setViewportView(jTable1);
    }
      
      void getDataWithId(int id)
      {
          arr=LiteConection.getPackgeInfo();
        ar=LiteConection.get_The_date();
             dater = new String[arr.size()][8];
           //int conter= 0 ; 
      
        for (int i= 0 ; i<arr.size(); i++)
        {
            
           if(arr.get(i).getPackageID()==id)
           {
               
               dater[0][1]=arr.get(i).getPackageSerilNumber();
              
                     dater[0][0]=""+arr.get(i).getPackageID();
                     dater[0][2]=arr.get(i).getOwnerPackageName();
                     dater[0][3]=arr.get(i).getOwnerPhoneNumber();
                     dater[0][4]=ar.get(i).getStardate();
                     dater[0][5]=arr.get(i).getPackgePrice();
                     dater[0][6]=arr.get(i).getPackgeDate();
                     dater[0][7]=arr.get(i).getPackgeNote();
                     break;
           }
            
           
        }
           jTable1=new JTable(dater,headr);
       
          //jScrollPane1.setLayout(null);
           
             ((DefaultTableCellRenderer)jTable1.getTableHeader().getDefaultRenderer())
             .setHorizontalAlignment((int)JLabel.CENTER_ALIGNMENT);
     DefaultTableCellRenderer v = new DefaultTableCellRenderer();
     v.setHorizontalAlignment(JLabel.CENTER);
     jTable1.getColumnModel().getColumn(0).setCellRenderer(v);
     for( int i=0 ; i<jTable1.getColumnCount();i++)
     {
         jTable1.getColumnModel().getColumn(i).setCellRenderer(v);
     }
      jScrollPane1.setViewportView(jTable1);

      }
      
void getDataWithName(String name)
{
     arr=LiteConection.getPackgeInfo();
        ar=LiteConection.get_The_date();
             dater = new String[arr.size()][8];
           //int conter= 0 ; 
          
        for (int i= 0 ; i<arr.size(); i++)
        {
            
           if(arr.get(i).getOwnerPackageName().equals(name))
           {
               
               dater[0][1]=arr.get(i).getPackageSerilNumber();
              
                     dater[0][0]=""+arr.get(i).getPackageID();
                     dater[0][2]=arr.get(i).getOwnerPackageName();
                     dater[0][3]=arr.get(i).getOwnerPhoneNumber();
                     dater[0][4]=ar.get(i).getStardate();
                     dater[0][5]=arr.get(i).getPackgePrice();
                     dater[0][6]=arr.get(i).getPackgeDate();
                     dater[0][7]=arr.get(i).getPackgeNote();
                     break;
           }
            
           
        }
           jTable1=new JTable(dater,headr);
       
          //jScrollPane1.setLayout(null);
           
             ((DefaultTableCellRenderer)jTable1.getTableHeader().getDefaultRenderer())
             .setHorizontalAlignment((int)JLabel.CENTER_ALIGNMENT);
     DefaultTableCellRenderer v = new DefaultTableCellRenderer();
     v.setHorizontalAlignment(JLabel.CENTER);
     jTable1.getColumnModel().getColumn(0).setCellRenderer(v);
     for( int i=0 ; i<jTable1.getColumnCount();i++)
     {
         jTable1.getColumnModel().getColumn(i).setCellRenderer(v);
     }
      jScrollPane1.setViewportView(jTable1);

}

void getDataWitheSerialNumber(String SerialNumber)
{
    arr=LiteConection.getPackgeInfo();
        ar=LiteConection.get_The_date();
             dater = new String[arr.size()][8];
           //int conter= 0 ; 
          
        for (int i= 0 ; i<arr.size(); i++)
        {
            
           if(arr.get(i).getPackageSerilNumber().equals(SerialNumber))
           {
               
               dater[0][1]=arr.get(i).getPackageSerilNumber();
              
                     dater[0][0]=""+arr.get(i).getPackageID();
                     dater[0][2]=arr.get(i).getOwnerPackageName();
                     dater[0][3]=arr.get(i).getOwnerPhoneNumber();
                     dater[0][4]=ar.get(i).getStardate();
                     dater[0][5]=arr.get(i).getPackgePrice();
                     dater[0][6]=arr.get(i).getPackgeDate();
                     dater[0][7]=arr.get(i).getPackgeNote();
                     break;
           }
            
           
        }
           jTable1=new JTable(dater,headr);
       
          //jScrollPane1.setLayout(null);
           
             ((DefaultTableCellRenderer)jTable1.getTableHeader().getDefaultRenderer())
             .setHorizontalAlignment((int)JLabel.CENTER_ALIGNMENT);
     DefaultTableCellRenderer v = new DefaultTableCellRenderer();
     v.setHorizontalAlignment(JLabel.CENTER);
     jTable1.getColumnModel().getColumn(0).setCellRenderer(v);
     for( int i=0 ; i<jTable1.getColumnCount();i++)
     {
         jTable1.getColumnModel().getColumn(i).setCellRenderer(v);
     }
      jScrollPane1.setViewportView(jTable1);
}

void getTheball()
{
    
}

 void getTheDilverdDatr()
    {
        arr=LiteConection.getPackgeInfo();
        ar=LiteConection.get_The_date();
        dater = new String[arr.size()][9];
        int cnter=0;
       
        
        for(int i= 0 ; i<arr.size() ; i++)
        {
            if (arr.get(i).isPackgeDilverd()==true)
            {
              /*  dater[cnter][1]=arr.get(i).getPackageSerilNumber();
                     dater[cnter][0]=""+arr.get(i).getPackageID();
                     dater[cnter][2]=arr.get(i).getOwnerPackageName();
                     dater[cnter][3]=arr.get(i).getOwnerPhoneNumber();
                     dater[cnter][4]=ar.get(i).getStardate();
               
                     dater[cnter][5]=arr.get(i).getPackgePrice();
                     dater[cnter][6]=arr.get(i).getPackgeDate();
                     dater[cnter][7]=arr.get(i).getPackgeNote();
                     cnter++;*/
                // rep.getTheTotalCostOfDeliverdData(arr.get(i).getPackgePrice());
                cost1=cost1+Double.parseDouble(arr.get(i).getPackgePrice());
                Winreport.jLabel2.setText(""+cost1);
            }
            else{
                     
            }
                     
        }
   
    }
 
 void getDapmerntPayment(String Dapmernt)
 {
  int mr=0;    
       arr=LiteConection.getPackgeInfo();
        ar=LiteConection.get_The_date();
      for(int i= 0 ; i<arr.size() ; i++)
        {
            if (arr.get(i).getPackgeDamperntHolder().equals(Dapmernt)&& arr.get(i).isPackgeDilverd()==true)
            {
              /*  dater[cnter][1]=arr.get(i).getPackageSerilNumber();
                     dater[cnter][0]=""+arr.get(i).getPackageID();
                     dater[cnter][2]=arr.get(i).getOwnerPackageName();
                     dater[cnter][3]=arr.get(i).getOwnerPhoneNumber();
                     dater[cnter][4]=ar.get(i).getStardate();
               
                     dater[cnter][5]=arr.get(i).getPackgePrice();
                     dater[cnter][6]=arr.get(i).getPackgeDate();
                     dater[cnter][7]=arr.get(i).getPackgeNote();
                     cnter++;*/
                
              cost2= cost2+Double.parseDouble( arr.get(i).getPackgePrice());
               Winreport.jLabel3.setText(""+cost2);
               mr++;
               
            }
            else{
                if (mr==0)
                {
              Winreport.jLabel3.setText("0");       
                }
                
            }
                     
        }
  
 }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
